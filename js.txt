<script>- тег для автоматического выполнения,когда его обработает браузер
<script src="/path/to/script.js"></script> -подключить фаил скрипта к HTML
alert('текст') - изображает текст
"use strict" -  работа в современном режиме
let- Для создания переменной 
const- обьявить явить  неизменяемую переменную
typeof - возвращает тип аргумента
prompt- Этот код отобразит модальное окно c текстом, полем для ввода текста и кнопками OK/Отмена.
result = prompt(title)
confirm - тображает модальное окно с текстом вопроса question и двумя кнопками
result = confirm(question);
String(value) - строковое преобразование Для примитивных значений 
Number(value) - численное преобразование длясматиматических операций
Boolean(value)- логическое преобразование в логических операциях
|| - или
&& - и
! - не

Цикл While:
while (condition) {
  // код
  // также называемый "телом цикла"
}

Цикл «do…while»:
do {
  // тело цикла
} while (condition);

Цикл «for»:
for (начало; условие; шаг) {
  // ... тело цикла ...
}

function имя функции (параметры) - обьявление функции
showMessage(..)     // показывает сообщение
getAge(..)          // возвращает возраст (получая его каким-то образом)
calcSum(..)         // вычисляет сумму и возвращает результат
createForm(..)      // создаёт форму (и обычно возвращает её)
checkPermission(..) // проверяет доступ, возвращая true/false
% - Возвращает целочисленный остаток от деления двух операндов.

ask(question, yes, no) - функция вопроса
showCancel – для ответа «no»
showOk колбэк для ответа «yes»

let func = (arg1, arg2, ...argN) => expression; - стрелочная функция

 Типы данных(8):

number - для целых и вещественных чисел,
bigint - для работы с целыми числами произвольной длины,
string  - для строк,
boolean - для логических значений истинности или ложности: true/false,
null – тип с единственным значением null, т.е. «пустое значение» или «значение не существует»,
undefined – тип с единственным значением undefined, т.е. «значение не задано»,
object и symbol – сложные структуры данных и уникальные идентификаторы; их мы ещё не изучили.

